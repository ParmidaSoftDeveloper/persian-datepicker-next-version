{
  "version": 3,
  "file": "zerounip.css",
  "sources": [
    "../App.svelte",
    "../YearView.svelte",
    "../MonthView.svelte",
    "../TimeView.svelte",
    "../DateView.svelte",
    "../Navigator.svelte"
  ],
  "sourcesContent": [
    "<div class=\"pwt-datepicker\">\n  <button on:click=\"{today}\">Today</button>\n  <button on:click=\"{navNext}\">Next</button>\n  <button on:click=\"{navPrev}\">Prev</button>\n  <!-- navigator -->\n  <Navigator selectedUnix=\"{$selectedUnix}\" />\n  <br />\n  <!-- year view -->\n  <YearView\n    on:select=\"{onSelectYear}\"\n    viewUnix=\"{$viewUnix}\"\n    selectedUnix=\"{$selectedUnix}\" />\n  <br />\n  <!-- month view -->\n  <MonthView\n    on:select=\"{onSelectMonth}\"\n    viewUnix=\"{$viewUnix}\"\n    selectedUnix=\"{$selectedUnix}\" />\n  <br />\n  <!-- time view -->\n  <TimeView selectedUnix=\"{$selectedUnix}\" />\n  <br />\n  <!-- date view -->\n  <DateView\n    on:selectDate=\"{onSelectDate}\"\n    {todayUnix}\n    selectedUnix=\"{$selectedUnix}\"\n    viewUnix=\"{$viewUnix}\" />\n</div>\n\n<script>\n  import { createEventDispatcher } from 'svelte'\n  import persianDate from 'persian-date'\n  import YearView from './components/YearView.svelte'\n  import MonthView from './components/MonthView.svelte'\n  import DateView from './components/DateView.svelte'\n  import TimeView from './components/TimeView.svelte'\n  import Navigator from './components/Navigator.svelte'\n  import config from './config.js'\n  import { persianDateToUnix } from './helpers.js'\n  import { actions, selectedUnix, viewUnix } from './stores.js'\n\n  // Public props\n  export let options = {}\n\n  const todayUnix = persianDateToUnix(new persianDate())\n\n  // Merge default options with given options\n  if (!options) {\n    //options = Options\n  } else {\n    //options = Object.assign(Options, options)\n  }\n\n  // Public events\n  const dispatch = createEventDispatcher()\n  const dispatcher = function(input) {\n    if (options[input]) {\n      return event => options[input](event)\n    } else {\n      return event => {\n        actions[input](event.detail.payload)\n      }\n    }\n  }\n\n  const onSelectDate = function(event) {\n    dispatcher('onSelectDate')(event)\n  }\n\n  const onSelectMonth = function(event) {\n    dispatcher('onSelectMonth')(event)\n  }\n\n  const onSelectYear = function(event) {\n    dispatcher('onSelectYear')(event)\n  }\n\n  const navNext = event => {\n    dispatcher('onSelectNextView')(event)\n  }\n\n  const today = event => {\n    dispatcher('onSelectToday')(event)\n  }\n\n  const navPrev = event => {\n    dispatcher('onSelectPrevView')(event)\n  }\n</script>\n\n<style>\n  body {\n    font-size: 12px;\n  }\n  * {\n    direction: rtl;\n  }\n  td {\n    width: 40px;\n    height: 80px;\n    padding: 2em;\n  }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9BcHAuc3ZlbHRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7RUFDRTtJQUNFLGVBQWU7RUFDakI7RUFDQTtJQUNFLGNBQWM7RUFDaEI7RUFDQTtJQUNFLFdBQVc7SUFDWCxZQUFZO0lBQ1osWUFBWTtFQUNkIiwiZmlsZSI6InNyYy9BcHAuc3ZlbHRlIiwic291cmNlc0NvbnRlbnQiOlsiXG4gIGJvZHkge1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgfVxuICAqIHtcbiAgICBkaXJlY3Rpb246IHJ0bDtcbiAgfVxuICB0ZCB7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiA4MHB4O1xuICAgIHBhZGRpbmc6IDJlbTtcbiAgfVxuIl19 */</style>\n",
    "<div class=\"pwt-date-year-view\">\n  {#each yearRange as year}\n    <span\n      on:click=\"{event => select(year)}\"\n      class:selected=\"{currentYear === year}\">\n      {year}\n    </span>\n  {/each}\n</div>\n\n<script>\n  import { time, elapsed, countable } from '../stores.js'\n  import persianDate from 'persian-date'\n  export let selectedUnix\n  export let viewUnix\n  import { createEventDispatcher } from 'svelte'\n  const dispatch = createEventDispatcher()\n  function select(payload) {\n    dispatch('select', {\n      payload: payload,\n    })\n  }\n  $: currentViewDate = new persianDate(viewUnix).format('MMMM')\n  $: currentYear = new persianDate(selectedUnix).year()\n  let yearRange\n  let startYear\n  $: {\n    yearRange = []\n    startYear = currentYear - (currentYear % 12)\n    let i = 0\n    while (i < 12) {\n      yearRange.push(startYear + i)\n      i++\n    }\n  }\n</script>\n\n<style global lang=\"scss\">:global(.pwt-date-year-view) {\n  border: 1px solid red;\n  width: 300px;\n  height: 100px; }\n  :global(.pwt-date-year-view) :global(span) {\n    outline: 1px solid red;\n    display: block;\n    width: 33.33%;\n    float: right; }\n    :global(.pwt-date-year-view) :global(span.selected) {\n      background-color: red; }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb21wb25lbnRzL1llYXJWaWV3LnN2ZWx0ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFxQjtFQUNyQixZQUFZO0VBQ1osYUFBYSxFQUFFO0VBQ2Y7SUFDRSxzQkFBc0I7SUFDdEIsY0FBYztJQUNkLGFBQWE7SUFDYixZQUFZLEVBQUU7SUFDZDtNQUNFLHFCQUFxQixFQUFFIiwiZmlsZSI6InNyYy9jb21wb25lbnRzL1llYXJWaWV3LnN2ZWx0ZSIsInNvdXJjZXNDb250ZW50IjpbIi5wd3QtZGF0ZS15ZWFyLXZpZXcge1xuICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG4gIHdpZHRoOiAzMDBweDtcbiAgaGVpZ2h0OiAxMDBweDsgfVxuICAucHd0LWRhdGUteWVhci12aWV3IHNwYW4ge1xuICAgIG91dGxpbmU6IDFweCBzb2xpZCByZWQ7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDMzLjMzJTtcbiAgICBmbG9hdDogcmlnaHQ7IH1cbiAgICAucHd0LWRhdGUteWVhci12aWV3IHNwYW4uc2VsZWN0ZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmVkOyB9XG4vKiMgc291cmNlTWFwcGluZ1VSTD1zcmMvY29tcG9uZW50cy9ZZWFyVmlldy5zdmVsdGUubWFwICovIl19 */</style>\n",
    "<div class=\"pwt-date-month-view\">\n  {#each monthRange as month, index}\n    <span\n      on:click=\"{event => select(index + 1)}\"\n      class:selected=\"{currentMonth - 1 === index}\">\n      {month}\n    </span>\n  {/each}\n</div>\n\n<script>\n  import persianDate from 'persian-date'\n  import { createEventDispatcher } from 'svelte'\n  export let selectedUnix\n  export let viewUnix\n  const dispatch = createEventDispatcher()\n  function select(payload) {\n    dispatch('select', {\n      payload: payload,\n    })\n  }\n  let monthRange = new persianDate().rangeName().months\n  $: currentUnixDate = new persianDate(viewUnix).format('MMMM')\n  $: currentMonth = new persianDate(selectedUnix).month()\n</script>\n\n<style global lang=\"scss\">:global(.pwt-date-month-view) {\n  border: 1px solid red;\n  width: 300px;\n  height: 100px; }\n  :global(.pwt-date-month-view) :global(span) {\n    outline: 1px solid red;\n    display: block;\n    width: 33.33%;\n    float: right; }\n    :global(.pwt-date-month-view) :global(span.selected) {\n      background-color: red; }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb21wb25lbnRzL01vbnRoVmlldy5zdmVsdGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBcUI7RUFDckIsWUFBWTtFQUNaLGFBQWEsRUFBRTtFQUNmO0lBQ0Usc0JBQXNCO0lBQ3RCLGNBQWM7SUFDZCxhQUFhO0lBQ2IsWUFBWSxFQUFFO0lBQ2Q7TUFDRSxxQkFBcUIsRUFBRSIsImZpbGUiOiJzcmMvY29tcG9uZW50cy9Nb250aFZpZXcuc3ZlbHRlIiwic291cmNlc0NvbnRlbnQiOlsiLnB3dC1kYXRlLW1vbnRoLXZpZXcge1xuICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG4gIHdpZHRoOiAzMDBweDtcbiAgaGVpZ2h0OiAxMDBweDsgfVxuICAucHd0LWRhdGUtbW9udGgtdmlldyBzcGFuIHtcbiAgICBvdXRsaW5lOiAxcHggc29saWQgcmVkO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAzMy4zMyU7XG4gICAgZmxvYXQ6IHJpZ2h0OyB9XG4gICAgLnB3dC1kYXRlLW1vbnRoLXZpZXcgc3Bhbi5zZWxlY3RlZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7IH1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPXNyYy9jb21wb25lbnRzL01vbnRoVmlldy5zdmVsdGUubWFwICovIl19 */</style>\n",
    "<div class=\"pwt-date-navigator\">{currentUnixDate}</div>\n\n<script>\n  import { time, elapsed, countable } from '../stores.js'\n  import persianDate from 'persian-date'\n  import { afterUpdate } from 'svelte'\n  export let selectedUnix\n\n  let currentUnixDate = new persianDate(selectedUnix).format('HH:mm:ss')\n\n  afterUpdate(async () => {\n\t\tcurrentUnixDate = new persianDate(selectedUnix).format('HH:mm:ss')\n  })\n</script>\n\n<style global lang=\"scss\">:global(.pwt-date-navigator) {\n  width: 600px;\n  height: 30px;\n  line-height: 30px;\n  position: relative;\n  border: 3px dashed #444; }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb21wb25lbnRzL1RpbWVWaWV3LnN2ZWx0ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7RUFDWixZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQix1QkFBdUIsRUFBRSIsImZpbGUiOiJzcmMvY29tcG9uZW50cy9UaW1lVmlldy5zdmVsdGUiLCJzb3VyY2VzQ29udGVudCI6WyIucHd0LWRhdGUtbmF2aWdhdG9yIHtcbiAgd2lkdGg6IDYwMHB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlcjogM3B4IGRhc2hlZCAjNDQ0OyB9XG4vKiMgc291cmNlTWFwcGluZ1VSTD1zcmMvY29tcG9uZW50cy9UaW1lVmlldy5zdmVsdGUubWFwICovIl19 */</style>\n",
    "<div class=\"pwt-date-view\">\n  <table class=\"month-table next\" border=\"1\">\n    <tr>\n      {#if groupedDay[0]}\n        {#each groupedDay[0] as day}\n          <th>{day.format('ddd')}</th>\n        {/each}\n      {/if}\n    </tr>\n    {#each groupedDay as week, i}\n      <tr>\n        {#each week as day}\n          <td\n            on:click=\"{event => selectDate(day)}\"\n            class:selected=\"{isSameDate(day, selectedDay)}\"\n            class:today=\"{isSameDate(day, today)}\">\n            {day.format('D')}\n          </td>\n        {/each}\n      </tr>\n    {/each}\n  </table>\n</div>\n\n<script>\n  import { time, elapsed, countable } from '../stores.js'\n  import { afterUpdate } from 'svelte';\n  import persianDate from 'persian-date'\n  const isSameDate = (a, b) => {\n    return a.format('YYYY/MM/DD') === b.format('YYYY/MM/DD')\n  }\n  export let viewUnix\n  export let selectedUnix\n  export let todayUnix\n\n  import { createEventDispatcher } from 'svelte'\n  const dispatch = createEventDispatcher()\n  function selectDate(payload) {\n    dispatch('selectDate', {\n      payload: payload,\n    })\n  }\n  let selectedDay = new persianDate(selectedUnix).startOf('day');\n  afterUpdate(async () => {\n    selectedDay = new persianDate(selectedUnix).startOf('day')\n\t});\n\n  let today = new persianDate(todayUnix)\n  let groupedDay = []\n\n  $: viewUnixDate = new persianDate(viewUnix).format('MMMM YYYY')\n  $: {\n    groupedDay = []\n    let days = []\n    let dateObj = new persianDate(viewUnix)\n    let day = dateObj.startOf('month')\n    let daysInMonth = dateObj.daysInMonth()\n    let monthFirstDate = dateObj.startOf('month')\n    let monthLastDate = dateObj.endOf('month')\n    let monthVisualBeforeSpan = day.day()\n    let monthVisualAfterSpan =\n      8 -\n      monthLastDate\n        .clone()\n        .add('m', 1)\n        .startOf('month')\n        .day()\n    let i = 0\n    while (i < daysInMonth) {\n      i++\n      // days.push(day.add('day', i))\n      days.push(new persianDate([day.year(), day.month(), i]))\n    }\n    let j = 1\n    while (j < monthVisualBeforeSpan) {\n      days.unshift(monthFirstDate.subtract('day', j))\n      j++\n    }\n    let f = 1\n    while (f <= monthVisualAfterSpan) {\n      days.push(monthLastDate.add('day', f))\n      f++\n    }\n    let weekindex = 0\n    days.forEach((item, index) => {\n      if (index % 7 == 0) {\n        groupedDay[weekindex] = []\n      }\n      groupedDay[weekindex].push(item)\n      if (index % 7 == 6) {\n        weekindex++\n      }\n    })\n  }\n</script>\n\n<style global lang=\"scss\">:global(table) {\n  float: right; }\n\n:global(.pwt-date-view) {\n  width: 600px;\n  height: 350px;\n  position: relative;\n  border: 3px dashed #444; }\n\n:global(.month-table) {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  left: 10%;\n  bottom: 0px;\n  width: 100%;\n  border: 1px solid red; }\n\n:global(.today) {\n  background: green; }\n\n:global(.selected) {\n  background: red; }\n\n:global(td) {\n  height: 20px;\n  padding: 1em;\n  cursor: pointer; }\n  :global(td:hover) {\n    background: #ededed; }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb21wb25lbnRzL0RhdGVWaWV3LnN2ZWx0ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVksRUFBRTs7QUFFaEI7RUFDRSxZQUFZO0VBQ1osYUFBYTtFQUNiLGtCQUFrQjtFQUNsQix1QkFBdUIsRUFBRTs7QUFFM0I7RUFDRSxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFVBQVU7RUFDVixTQUFTO0VBQ1QsV0FBVztFQUNYLFdBQVc7RUFDWCxxQkFBcUIsRUFBRTs7QUFFekI7RUFDRSxpQkFBaUIsRUFBRTs7QUFFckI7RUFDRSxlQUFlLEVBQUU7O0FBRW5CO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWixlQUFlLEVBQUU7RUFDakI7SUFDRSxtQkFBbUIsRUFBRSIsImZpbGUiOiJzcmMvY29tcG9uZW50cy9EYXRlVmlldy5zdmVsdGUiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIGZsb2F0OiByaWdodDsgfVxuXG4ucHd0LWRhdGUtdmlldyB7XG4gIHdpZHRoOiA2MDBweDtcbiAgaGVpZ2h0OiAzNTBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXI6IDNweCBkYXNoZWQgIzQ0NDsgfVxuXG4ubW9udGgtdGFibGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMHB4O1xuICByaWdodDogMHB4O1xuICBsZWZ0OiAxMCU7XG4gIGJvdHRvbTogMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkOyB9XG5cbi50b2RheSB7XG4gIGJhY2tncm91bmQ6IGdyZWVuOyB9XG5cbi5zZWxlY3RlZCB7XG4gIGJhY2tncm91bmQ6IHJlZDsgfVxuXG50ZCB7XG4gIGhlaWdodDogMjBweDtcbiAgcGFkZGluZzogMWVtO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgdGQ6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICNlZGVkZWQ7IH1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPXNyYy9jb21wb25lbnRzL0RhdGVWaWV3LnN2ZWx0ZS5tYXAgKi8iXX0= */</style>\n",
    "<div class=\"pwt-date-navigator\">{selectedUnixDate}</div>\n\n<script>\n  import persianDate from 'persian-date'\n  export let selectedUnix\n  $: selectedUnixDate = new persianDate(selectedUnix).format('MMMM YYYY DD')\n</script>\n\n<style global lang=\"scss\">:global(.pwt-date-navigator) {\n  width: 600px;\n  height: 30px;\n  line-height: 30px;\n  position: relative;\n  border: 3px dashed #444; }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb21wb25lbnRzL05hdmlnYXRvci5zdmVsdGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsdUJBQXVCLEVBQUUiLCJmaWxlIjoic3JjL2NvbXBvbmVudHMvTmF2aWdhdG9yLnN2ZWx0ZSIsInNvdXJjZXNDb250ZW50IjpbIi5wd3QtZGF0ZS1uYXZpZ2F0b3Ige1xuICB3aWR0aDogNjAwcHg7XG4gIGhlaWdodDogMzBweDtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm9yZGVyOiAzcHggZGFzaGVkICM0NDQ7IH1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPXNyYy9jb21wb25lbnRzL05hdmlnYXRvci5zdmVsdGUubWFwICovIl19 */</style>\n"
  ],
  "names": [],
  "mappings": "AA+FE,eAAE,CAAC,AACD,SAAS,CAAE,GAAG,AAChB,CAAC;AC5D+B,mBAAmB,AAAE,CAAC,AACtD,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CACrB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AAAE,CAAC,AACR,mBAAmB,AAAC,CAAC,AAAQ,IAAI,AAAE,CAAC,AAC1C,OAAO,CAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CACtB,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,MAAM,CACb,KAAK,CAAE,KAAK,AAAE,CAAC,AACP,mBAAmB,AAAC,CAAC,AAAQ,aAAa,AAAE,CAAC,AACnD,gBAAgB,CAAE,GAAG,AAAE,CAAC;ACrBI,oBAAoB,AAAE,CAAC,AACvD,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CACrB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AAAE,CAAC,AACR,oBAAoB,AAAC,CAAC,AAAQ,IAAI,AAAE,CAAC,AAC3C,OAAO,CAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CACtB,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,MAAM,CACb,KAAK,CAAE,KAAK,AAAE,CAAC,AACP,oBAAoB,AAAC,CAAC,AAAQ,aAAa,AAAE,CAAC,AACpD,gBAAgB,CAAE,GAAG,AAAE,CAAC;ACrBI,mBAAmB,AAAE,CAAC,AACtD,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,CACjB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CAAC,MAAM,CAAC,IAAI,AAAE,CAAC;AC4EM,KAAK,AAAE,CAAC,AACxC,KAAK,CAAE,KAAK,AAAE,CAAC,AAET,cAAc,AAAE,CAAC,AACvB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CAAC,MAAM,CAAC,IAAI,AAAE,CAAC,AAEpB,YAAY,AAAE,CAAC,AACrB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,KAAK,CAAE,GAAG,CACV,IAAI,CAAE,GAAG,CACT,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,GAAG,AAAE,CAAC,AAElB,MAAM,AAAE,CAAC,AACf,UAAU,CAAE,KAAK,AAAE,CAAC,AAEd,SAAS,AAAE,CAAC,AAClB,UAAU,CAAE,GAAG,AAAE,CAAC,AAEZ,EAAE,AAAE,CAAC,AACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,OAAO,AAAE,CAAC,AACV,QAAQ,AAAE,CAAC,AACjB,UAAU,CAAE,OAAO,AAAE,CAAC;ACrHQ,mBAAmB,AAAE,CAAC,AACtD,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,CACjB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CAAC,MAAM,CAAC,IAAI,AAAE,CAAC"
}